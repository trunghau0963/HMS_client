/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/lUoDqQ3rZ7A
 */
import { Button } from "@/components/ui/button";
import {
  AlertDialogTrigger,
  AlertDialogTitle,
  AlertDialogDescription,
  AlertDialogHeader,
  AlertDialogFooter,
  AlertDialogContent,
  AlertDialog,
} from "@/components/ui/alert-dialog";
import React from "react";
import { setCredentials } from "@/redux/feature/authSlice";
import { useRouter } from "next/navigation";
import { AppDispatch, RootState } from "@/redux/store";
import { useDispatch, useSelector } from "react-redux";
import axios from "axios";
import { useToast } from "@/components/ui/use-toast";
import { ToastAction } from "@/components/ui/toast";

export const logout = () => {
  const dispatch: AppDispatch = useDispatch();
  const { valueAuth } = useSelector((state: RootState) => state.auth);
  const { toast } = useToast();
  const navigate = useRouter();

  const [buttonDisabled, setButtonDisabled] = React.useState(false);
  const [loading, setLoading] = React.useState(false);
  const onLogOut = async () => {
    try {
      const respone = await axios.get("/api/auth/logout");
      console.log("Logout success", respone);
      toast({
        variant: "destructive",
        title: "Success.",
        description: "Logout successful",
      });
      dispatch(setCredentials({ user: null, accessToken: null }));
      // navigate.push("/sign-in");
    } catch (error: any) {
      console.log(error.message);
      toast({
        title: "Error.",
        description: error.message,
      });
    }
  }
  return (
    <AlertDialog>
      <AlertDialogTrigger asChild>
        <Button variant="outline">Logout</Button>
      </AlertDialogTrigger>
      <AlertDialogContent>
        <AlertDialogHeader>
          <AlertDialogTitle>Confirm Logout</AlertDialogTitle>
          <AlertDialogDescription>
            Are you sure you want to logout? You will need to log back in to
            continue using our services.
          </AlertDialogDescription>
        </AlertDialogHeader>
        <AlertDialogFooter>
          <Button className="bg-blue-500 text-white">Logout</Button>
          <Button className="bg-white text-blue-500" variant="outline">
            Cancel
          </Button>
        </AlertDialogFooter>
      </AlertDialogContent>
    </AlertDialog>
  );
};
